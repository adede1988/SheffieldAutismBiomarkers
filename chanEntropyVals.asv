function [sampEnt] = chanEntropyVals(out)
%input: 
%       out     a struct with the fields data 
%               assumes that data is a channels X time X epochs array
%               and that each epoch is 2000ms long regardless of sampling
%               rate. This is critical, because all data are resampled to
%               1000 Hz sampling rate, but the way the code is written,
%               this only works with the assumption of 2s long epochs. 



if isfield(out, 'sampEnt')
   sampEnt = out.sampEnt; 
   fuzEnt = out.fuzEnt; 
   compSampEnt = out.compSampEnt; 
   compFuzEnt = out.compFuzEnt; 
else
  
   sampEnt = nan([size(out.data,1), size(out.data,3), 20 ]);

   
   for snip = 1:size(out.data,3) %loop epochs
        curSnip = out.data(:,:,snip); 
        %resample to 1000 Hz sampling rate
        times = round(linspace(1,2000, size(out.data,2))); 
        curSnip = timeseries(curSnip', times ); 
        curSnip = resample(curSnip, [1:2000]);
        curSnip = curSnip.Data'; 
      
          
               
       sampEnt(1,snip, :) = msentropy(curSnip,2, .3, 20);
               
  

   end

  
 

end
end