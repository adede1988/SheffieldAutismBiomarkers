n = length(dv)
lims = quantile(dv, c(.1, .90))
dv_mean = mean(dv[dv>lims[1] & dv<lims[2]])
dv_sd = sd(dv[dv>lims[1] & dv<lims[2]])
dv_z = (dv - dv_mean) / dv_sd
nonOut = which(abs(dv_z)<5)
dv_mean = mean(dv[nonOut])
dv_sd = sd(dv[nonOut])
dv_z = (dv - dv_mean) / dv_sd
dv = dv[abs(dv_z)<5]
age = temp$age[abs(dv_z)<5]
sex = temp$sex[abs(dv_z)<5]
IQ = temp$IQ[abs(dv_z)<5]
gID = groupID[keep]
ID = gID[abs(dv_z)<5]
dv = (dv - mean(dv)) / sd(dv)
modDat = data.frame('dv' = dv, 'age' = age, 'sex' = factor(sex), 'IQ' = IQ, 'diag' = factor(ID))
curLM = lm(dv ~ diag  +age + sex +IQ , data = modDat)
aovTab = Anova(curLM, type = 2)
ai = (ii-2)*length(varNames)
results[tt+ai,1] = varNames[tt]
results$Diag[tt+ai] = aovTab$`Sum Sq`[1] / (aovTab$`Sum Sq`[1] + aovTab$`Sum Sq`[5])
results$sex[tt+ai] = aovTab$`Sum Sq`[2] / (aovTab$`Sum Sq`[2] + aovTab$`Sum Sq`[5])
results$IQ[tt+ai] = aovTab$`Sum Sq`[3] / (aovTab$`Sum Sq`[3] + aovTab$`Sum Sq`[5])
results$age[tt+ai] = aovTab$`Sum Sq`[4] / (aovTab$`Sum Sq`[4] + aovTab$`Sum Sq`[5])
results$age_b[tt+ai] = curLM$coefficients[[2]]
results$sex_b[tt+ai] = curLM$coefficients[[3]]
results$IQ_b[tt+ai] = curLM$coefficients[[4]]
results$diag_b1[tt+ai] = curLM$coefficients[[5]]
results$diag_b2[tt+ai] = curLM$coefficients[[6]]
results$n[tt+ai] = n
results$out[tt+ai] = n-length(dv)
results$ageGroup[tt+ai] = ii-1
}
}
ggplot(results, aes(x=Diag, color = factor(ageGroup), fill = factor(ageGroup) )) + geom_histogram(binwidth = .001) +
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(results, aes(x=age, color = factor(ageGroup), fill = factor(ageGroup) ) ) + geom_histogram(binwidth = .001)+
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(results, aes(x=sex, color = factor(ageGroup), fill = factor(ageGroup) ) ) + geom_histogram(binwidth = .001)+
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(results, aes(x=IQ, color = factor(ageGroup), fill = factor(ageGroup) ) ) + geom_histogram(binwidth = .001)+
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
results = data.frame('dependentVariable' = rep('A', 4*length(varNames)),
'age' = rep(0, 4*length(varNames)),
'sex' = rep(0, 4*length(varNames)),
'IQ' = rep(0, 4*length(varNames)),
'Diag' = rep(0, 4*length(varNames)),
'age_b' = rep(0, 4*length(varNames)),
'sex_b' = rep(0, 4*length(varNames)),
'IQ_b' = rep(0, 4*length(varNames)),
'diag_b1' = rep(0, 4*length(varNames)),
'diag_b2' = rep(0, 4*length(varNames)),
'n' = rep(0, 4*length(varNames)),
'out' = rep(0, 4*length(varNames)),
'ageGroup' = rep(0, 4*length(varNames)))
for(ii in 2:length(ageGroups)){
#down select for age
curDat = dat[dat$age>ageGroups[ii-1] & dat$age<ageGroups[ii], ]
#down select for group ID
curDat = curDat[curDat$group == 'CON' | curDat$group == 'AD' |curDat$group == 'ASD',]
groupID = rep(1,length(curDat$group))
groupID[curDat$group=='AD'] = 2
groupID[curDat$group=='ASD'] = 3
for(tt in 1:length(varNames)){
print(tt)
temp = curDat
keep = !is.nan(curDat[[varNames[tt]]])
temp = temp[!is.nan(curDat[[varNames[tt]]]),]
dv = temp[[varNames[tt]]]
n = length(dv)
lims = quantile(dv, c(.1, .90))
dv_mean = mean(dv[dv>lims[1] & dv<lims[2]])
dv_sd = sd(dv[dv>lims[1] & dv<lims[2]])
dv_z = (dv - dv_mean) / dv_sd
nonOut = which(abs(dv_z)<5)
dv_mean = mean(dv[nonOut])
dv_sd = sd(dv[nonOut])
dv_z = (dv - dv_mean) / dv_sd
dv = dv[abs(dv_z)<5]
age = temp$age[abs(dv_z)<5]
sex = temp$sex[abs(dv_z)<5]
IQ = temp$IQ[abs(dv_z)<5]
gID = groupID[keep]
ID = gID[abs(dv_z)<5]
dv = (dv - mean(dv)) / sd(dv)
modDat = data.frame('dv' = dv, 'age' = age, 'sex' = factor(sex), 'IQ' = IQ, 'diag' = factor(ID))
curLM = lm(dv ~ diag  +age + sex +IQ , data = modDat)
aovTab = Anova(curLM, type = 3)
ai = (ii-2)*length(varNames)
results[tt+ai,1] = varNames[tt]
results$Diag[tt+ai] = aovTab$`Sum Sq`[1] / (aovTab$`Sum Sq`[1] + aovTab$`Sum Sq`[5])
results$sex[tt+ai] = aovTab$`Sum Sq`[2] / (aovTab$`Sum Sq`[2] + aovTab$`Sum Sq`[5])
results$IQ[tt+ai] = aovTab$`Sum Sq`[3] / (aovTab$`Sum Sq`[3] + aovTab$`Sum Sq`[5])
results$age[tt+ai] = aovTab$`Sum Sq`[4] / (aovTab$`Sum Sq`[4] + aovTab$`Sum Sq`[5])
results$age_b[tt+ai] = curLM$coefficients[[2]]
results$sex_b[tt+ai] = curLM$coefficients[[3]]
results$IQ_b[tt+ai] = curLM$coefficients[[4]]
results$diag_b1[tt+ai] = curLM$coefficients[[5]]
results$diag_b2[tt+ai] = curLM$coefficients[[6]]
results$n[tt+ai] = n
results$out[tt+ai] = n-length(dv)
results$ageGroup[tt+ai] = ii-1
}
}
ggplot(results, aes(x=Diag, color = factor(ageGroup), fill = factor(ageGroup) )) + geom_histogram(binwidth = .001) +
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(results, aes(x=age, color = factor(ageGroup), fill = factor(ageGroup) ) ) + geom_histogram(binwidth = .001)+
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(results, aes(x=sex, color = factor(ageGroup), fill = factor(ageGroup) ) ) + geom_histogram(binwidth = .001)+
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(results, aes(x=IQ, color = factor(ageGroup), fill = factor(ageGroup) ) ) + geom_histogram(binwidth = .001)+
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(results, aes(x=IQ, color = factor(ageGroup), fill = factor(ageGroup) ) ) + geom_histogram(binwidth = .001)+
coord_cartesian(xlim=c(0,2), ylim = c(0,50))
aovTab
View(aovTab)
names(aovTab)
rows(aovTab)
row.names(aovTab)
which(row.names(aovTab)=='diag')
which(row.names(aovTab) == 'diag')
Anova(curLM, type = 2)
Anova(curLM, type = 3)
curLM$coefficients
names(curLM$coefficients)
results = data.frame('dependentVariable' = rep('A', 4*length(varNames)),
'age' = rep(0, 4*length(varNames)),
'sex' = rep(0, 4*length(varNames)),
'IQ' = rep(0, 4*length(varNames)),
'Diag' = rep(0, 4*length(varNames)),
'age_b' = rep(0, 4*length(varNames)),
'sex_b' = rep(0, 4*length(varNames)),
'IQ_b' = rep(0, 4*length(varNames)),
'diag_b1' = rep(0, 4*length(varNames)),
'diag_b2' = rep(0, 4*length(varNames)),
'n' = rep(0, 4*length(varNames)),
'out' = rep(0, 4*length(varNames)),
'ageGroup' = rep(0, 4*length(varNames)))
for(ii in 2:length(ageGroups)){
#down select for age
curDat = dat[dat$age>ageGroups[ii-1] & dat$age<ageGroups[ii], ]
#down select for group ID
curDat = curDat[curDat$group == 'CON' | curDat$group == 'AD' |curDat$group == 'ASD',]
groupID = rep(1,length(curDat$group))
groupID[curDat$group=='AD'] = 2
groupID[curDat$group=='ASD'] = 3
for(tt in 1:length(varNames)){
print(tt)
temp = curDat
keep = !is.nan(curDat[[varNames[tt]]])
temp = temp[!is.nan(curDat[[varNames[tt]]]),]
dv = temp[[varNames[tt]]]
n = length(dv)
lims = quantile(dv, c(.1, .90))
dv_mean = mean(dv[dv>lims[1] & dv<lims[2]])
dv_sd = sd(dv[dv>lims[1] & dv<lims[2]])
dv_z = (dv - dv_mean) / dv_sd
nonOut = which(abs(dv_z)<5)
dv_mean = mean(dv[nonOut])
dv_sd = sd(dv[nonOut])
dv_z = (dv - dv_mean) / dv_sd
dv = dv[abs(dv_z)<5]
age = temp$age[abs(dv_z)<5]
sex = temp$sex[abs(dv_z)<5]
IQ = temp$IQ[abs(dv_z)<5]
gID = groupID[keep]
ID = gID[abs(dv_z)<5]
dv = (dv - mean(dv)) / sd(dv)
modDat = data.frame('dv' = dv, 'age' = age, 'sex' = factor(sex), 'IQ' = IQ, 'diag' = factor(ID))
curLM = lm(dv ~ diag  +age + sex +IQ , data = modDat)
aovTab = Anova(curLM, type = 3)
ai = (ii-2)*length(varNames)
results[tt+ai,1] = varNames[tt]
ei = which(row.names(aovTab) == 'Residuals')
ri = which(row.names(aovTab) == 'diag')
results$Diag[tt+ai] = aovTab$`Sum Sq`[ri] / (aovTab$`Sum Sq`[ri] + aovTab$`Sum Sq`[ei])
ri = which(row.names(aovTab) == 'sex')
results$sex[tt+ai] = aovTab$`Sum Sq`[ri] / (aovTab$`Sum Sq`[ri] + aovTab$`Sum Sq`[ei])
ri = which(row.names(aovTab) == 'IQ')
results$IQ[tt+ai] = aovTab$`Sum Sq`[ri] / (aovTab$`Sum Sq`[ri] + aovTab$`Sum Sq`[ei])
ri = which(row.names(aovTab) == 'age')
results$age[tt+ai] = aovTab$`Sum Sq`[ri] / (aovTab$`Sum Sq`[ri] + aovTab$`Sum Sq`[ei])
ri = which(names(curLM$coefficients) == 'age')
results$age_b[tt+ai] = curLM$coefficients[[ri]]
ri = which(names(curLM$coefficients) == 'sexM')
results$sex_b[tt+ai] = curLM$coefficients[[ri]]
ri = which(names(curLM$coefficients) == 'IQ')
results$IQ_b[tt+ai] = curLM$coefficients[[ri]]
ri = which(names(curLM$coefficients) == 'diag2')
results$diag_b1[tt+ai] = curLM$coefficients[[ri]]
ri = which(names(curLM$coefficients) == 'diag3')
results$diag_b2[tt+ai] = curLM$coefficients[[ri]]
results$n[tt+ai] = n
results$out[tt+ai] = n-length(dv)
results$ageGroup[tt+ai] = ii-1
}
}
ggplot(results, aes(x=Diag, color = factor(ageGroup), fill = factor(ageGroup) )) + geom_histogram(binwidth = .001) +
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(results, aes(x=age, color = factor(ageGroup), fill = factor(ageGroup) ) ) + geom_histogram(binwidth = .001)+
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(results, aes(x=sex, color = factor(ageGroup), fill = factor(ageGroup) ) ) + geom_histogram(binwidth = .001)+
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(results, aes(x=IQ, color = factor(ageGroup), fill = factor(ageGroup) ) ) + geom_histogram(binwidth = .001)+
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
results = data.frame('dependentVariable' = rep('A', 4*length(varNames)),
'age' = rep(0, 4*length(varNames)),
'sex' = rep(0, 4*length(varNames)),
'IQ' = rep(0, 4*length(varNames)),
'Diag' = rep(0, 4*length(varNames)),
'age_b' = rep(0, 4*length(varNames)),
'sex_b' = rep(0, 4*length(varNames)),
'IQ_b' = rep(0, 4*length(varNames)),
'diag_b1' = rep(0, 4*length(varNames)),
'diag_b2' = rep(0, 4*length(varNames)),
'n' = rep(0, 4*length(varNames)),
'out' = rep(0, 4*length(varNames)),
'ageGroup' = rep(0, 4*length(varNames)))
for(ii in 2:length(ageGroups)){
#down select for age
curDat = dat[dat$age>ageGroups[ii-1] & dat$age<ageGroups[ii], ]
#down select for group ID
curDat = curDat[curDat$group == 'CON' | curDat$group == 'AD' |curDat$group == 'ASD',]
groupID = rep(1,length(curDat$group))
groupID[curDat$group=='AD'] = 2
groupID[curDat$group=='ASD'] = 3
for(tt in 1:length(varNames)){
print(tt)
temp = curDat
keep = !is.nan(curDat[[varNames[tt]]])
temp = temp[!is.nan(curDat[[varNames[tt]]]),]
dv = temp[[varNames[tt]]]
n = length(dv)
lims = quantile(dv, c(.1, .90))
dv_mean = mean(dv[dv>lims[1] & dv<lims[2]])
dv_sd = sd(dv[dv>lims[1] & dv<lims[2]])
dv_z = (dv - dv_mean) / dv_sd
nonOut = which(abs(dv_z)<5)
dv_mean = mean(dv[nonOut])
dv_sd = sd(dv[nonOut])
dv_z = (dv - dv_mean) / dv_sd
dv = dv[abs(dv_z)<5]
age = temp$age[abs(dv_z)<5]
sex = temp$sex[abs(dv_z)<5]
IQ = temp$IQ[abs(dv_z)<5]
gID = groupID[keep]
ID = gID[abs(dv_z)<5]
dv = (dv - mean(dv)) / sd(dv)
modDat = data.frame('dv' = dv, 'age' = age, 'sex' = factor(sex), 'IQ' = IQ, 'diag' = factor(ID))
curLM = lm(dv ~ age + sex + diag  +IQ , data = modDat)
aovTab = Anova(curLM, type = 3)
ai = (ii-2)*length(varNames)
results[tt+ai,1] = varNames[tt]
ei = which(row.names(aovTab) == 'Residuals')
ri = which(row.names(aovTab) == 'diag')
results$Diag[tt+ai] = aovTab$`Sum Sq`[ri] / (aovTab$`Sum Sq`[ri] + aovTab$`Sum Sq`[ei])
ri = which(row.names(aovTab) == 'sex')
results$sex[tt+ai] = aovTab$`Sum Sq`[ri] / (aovTab$`Sum Sq`[ri] + aovTab$`Sum Sq`[ei])
ri = which(row.names(aovTab) == 'IQ')
results$IQ[tt+ai] = aovTab$`Sum Sq`[ri] / (aovTab$`Sum Sq`[ri] + aovTab$`Sum Sq`[ei])
ri = which(row.names(aovTab) == 'age')
results$age[tt+ai] = aovTab$`Sum Sq`[ri] / (aovTab$`Sum Sq`[ri] + aovTab$`Sum Sq`[ei])
ri = which(names(curLM$coefficients) == 'age')
results$age_b[tt+ai] = curLM$coefficients[[ri]]
ri = which(names(curLM$coefficients) == 'sexM')
results$sex_b[tt+ai] = curLM$coefficients[[ri]]
ri = which(names(curLM$coefficients) == 'IQ')
results$IQ_b[tt+ai] = curLM$coefficients[[ri]]
ri = which(names(curLM$coefficients) == 'diag2')
results$diag_b1[tt+ai] = curLM$coefficients[[ri]]
ri = which(names(curLM$coefficients) == 'diag3')
results$diag_b2[tt+ai] = curLM$coefficients[[ri]]
results$n[tt+ai] = n
results$out[tt+ai] = n-length(dv)
results$ageGroup[tt+ai] = ii-1
}
}
ggplot(results, aes(x=Diag, color = factor(ageGroup), fill = factor(ageGroup) )) + geom_histogram(binwidth = .001) +
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(results, aes(x=age, color = factor(ageGroup), fill = factor(ageGroup) ) ) + geom_histogram(binwidth = .001)+
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(results, aes(x=sex, color = factor(ageGroup), fill = factor(ageGroup) ) ) + geom_histogram(binwidth = .001)+
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(results, aes(x=IQ, color = factor(ageGroup), fill = factor(ageGroup) ) ) + geom_histogram(binwidth = .001)+
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
View(dat)
ggplot(dat, aes(x = PACmi_delgH_F, color = group)) %>% geom_histogram()
ggplot(dat, aes(x = PACmi_delgH_F, color = group)) + geom_histogram()
ggplot(dat, aes(x = PACmi_del_gH_F, color = group)) + geom_histogram()
ggplot(dat, aes(x = PACmi_del_gH_F, color = group, fill = group)) + geom_histogram(binwidth = .005)
ggplot(dat, aes(x = PACmi_del_gH_F, color = group, fill = group)) + geom_histogram(binwidth = .001)
ggplot(dat, aes(x = PACmi_del_gH_F, color = group, fill = group)) + geom_histogram(binwidth = .001) +
coord_cartesian(ylim = c(0,10))
ggplot(dat, aes(x = (PACmi_del_gH_F) - mean(PACmi_del_gH_F), color = group, fill = group)) + geom_histogram(binwidth = .001) +
ylab('test')
ggplot(dat, aes(x = ((PACmi_del_gH_F) - mean(PACmi_del_gH_F)) / sd(PACmi_del_gH_F), color = group, fill = group)) + geom_histogram(binwidth = .001)
ggplot(dat, aes(x = ((PACmi_del_gH_F) - mean(PACmi_del_gH_F)) / sd(PACmi_del_gH_F), color = group, fill = group)) + geom_histogram(binwidth = .1)
test$nbChanOrig[test$nbChanOrig==999] = 124
dat <- filter(test, group %in% c('CON', 'AD', 'ASD'), eyes == 'open', age<999, nbChanFinal/nbChanOrig >= .5)
ggplot(dat, aes(x = age, color = group, fill = group)) + geom_histogram()
ggplot(dat, aes(x = age, color = dataSet, fill = dataSet)) + geom_histogram()
ggplot(dat, aes(x = sex, color = group, fill = group)) + geom_bar()
ageGroups = quantile(dat$age, c(0,.25,.5,.75,1.0))
ageGroups[1]= 0
# ageGroups = c(0,36, 120,216,999)
varNames = names(dat)[20:1179]
results = data.frame('dependentVariable' = rep('A', 4*length(varNames)),
'age' = rep(0, 4*length(varNames)),
'sex' = rep(0, 4*length(varNames)),
'IQ' = rep(0, 4*length(varNames)),
'Diag' = rep(0, 4*length(varNames)),
'age_b' = rep(0, 4*length(varNames)),
'sex_b' = rep(0, 4*length(varNames)),
'IQ_b' = rep(0, 4*length(varNames)),
'diag_b1' = rep(0, 4*length(varNames)),
'diag_b2' = rep(0, 4*length(varNames)),
'n' = rep(0, 4*length(varNames)),
'out' = rep(0, 4*length(varNames)),
'ageGroup' = rep(0, 4*length(varNames)))
for(ii in 2:length(ageGroups)){
#down select for age
curDat = dat[dat$age>ageGroups[ii-1] & dat$age<ageGroups[ii], ]
#down select for group ID
curDat = curDat[curDat$group == 'CON' | curDat$group == 'AD' |curDat$group == 'ASD',]
groupID = rep(1,length(curDat$group))
groupID[curDat$group=='AD'] = 2
groupID[curDat$group=='ASD'] = 3
for(tt in 1:length(varNames)){
print(tt)
temp = curDat
keep = !is.nan(curDat[[varNames[tt]]])
temp = temp[!is.nan(curDat[[varNames[tt]]]),]
dv = temp[[varNames[tt]]]
n = length(dv)
lims = quantile(dv, c(.1, .90))
dv_mean = mean(dv[dv>lims[1] & dv<lims[2]])
dv_sd = sd(dv[dv>lims[1] & dv<lims[2]])
dv_z = (dv - dv_mean) / dv_sd
nonOut = which(abs(dv_z)<5)
dv_mean = mean(dv[nonOut])
dv_sd = sd(dv[nonOut])
dv_z = (dv - dv_mean) / dv_sd
dv = dv[abs(dv_z)<5]
age = temp$age[abs(dv_z)<5]
sex = temp$sex[abs(dv_z)<5]
IQ = temp$IQ[abs(dv_z)<5]
gID = groupID[keep]
ID = gID[abs(dv_z)<5]
dv = (dv - mean(dv)) / sd(dv)
modDat = data.frame('dv' = dv, 'age' = age, 'sex' = factor(sex), 'IQ' = IQ, 'diag' = factor(ID))
curLM = lm(dv ~ age + sex + diag  +IQ , data = modDat)
aovTab = Anova(curLM, type = 3)
ai = (ii-2)*length(varNames)
results[tt+ai,1] = varNames[tt]
ei = which(row.names(aovTab) == 'Residuals')
ri = which(row.names(aovTab) == 'diag')
results$Diag[tt+ai] = aovTab$`Sum Sq`[ri] / (aovTab$`Sum Sq`[ri] + aovTab$`Sum Sq`[ei])
ri = which(row.names(aovTab) == 'sex')
results$sex[tt+ai] = aovTab$`Sum Sq`[ri] / (aovTab$`Sum Sq`[ri] + aovTab$`Sum Sq`[ei])
ri = which(row.names(aovTab) == 'IQ')
results$IQ[tt+ai] = aovTab$`Sum Sq`[ri] / (aovTab$`Sum Sq`[ri] + aovTab$`Sum Sq`[ei])
ri = which(row.names(aovTab) == 'age')
results$age[tt+ai] = aovTab$`Sum Sq`[ri] / (aovTab$`Sum Sq`[ri] + aovTab$`Sum Sq`[ei])
ri = which(names(curLM$coefficients) == 'age')
results$age_b[tt+ai] = curLM$coefficients[[ri]]
ri = which(names(curLM$coefficients) == 'sexM')
results$sex_b[tt+ai] = curLM$coefficients[[ri]]
ri = which(names(curLM$coefficients) == 'IQ')
results$IQ_b[tt+ai] = curLM$coefficients[[ri]]
ri = which(names(curLM$coefficients) == 'diag2')
results$diag_b1[tt+ai] = curLM$coefficients[[ri]]
ri = which(names(curLM$coefficients) == 'diag3')
results$diag_b2[tt+ai] = curLM$coefficients[[ri]]
results$n[tt+ai] = n
results$out[tt+ai] = n-length(dv)
results$ageGroup[tt+ai] = ii-1
}
}
ggplot(results, aes(x=Diag, color = factor(ageGroup), fill = factor(ageGroup) )) + geom_histogram(binwidth = .001) +
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(results, aes(x=age, color = factor(ageGroup), fill = factor(ageGroup) ) ) + geom_histogram(binwidth = .001)+
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(results, aes(x=sex, color = factor(ageGroup), fill = factor(ageGroup) ) ) + geom_histogram(binwidth = .001)+
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(results, aes(x=IQ, color = factor(ageGroup), fill = factor(ageGroup) ) ) + geom_histogram(binwidth = .001)+
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(dat, aes(x=PACmi_del_gL_lF)) + geom_histogram()
ggplot(dat, aes(x=PACmi_del_gL_lF)) + geom_histogram(, binwidth = .001)
ggplot(dat, aes(x=PACmi_del_gL_lF)) + geom_histogram(, binwidth = .0005)
ggplot(dat, aes(x=PACmi_del_gL_lF)) + geom_histogram(, binwidth = .0001)
ggplot(dat, aes(x=PACmi_del_gL_lF, color = group)) + geom_histogram(, binwidth = .0001)
ggplot(dat, aes(x=PACmi_del_gL_lF, color = group, fill = group)) + geom_histogram(, binwidth = .0001)
ggplot(dat, aes(x=PACmi_del_gL_lF, color = group, fill = group)) + geom_histogram(, binwidth = .0001)+ facet_grid(rows = group)
ggplot(dat, aes(x=PACmi_del_gL_lF, color = group, fill = group)) + geom_histogram(, binwidth = .0001)+ facet_grid(rows = vars(group))
ggplot(dat, aes(x = age, y = sampEnt_course_O)) + geom_point()
ggplot(dat, aes(x = age, y = PACmi_al_gL_rf)) + geom_point()
ggplot(dat, aes(x = age, y = PACmi_al_gL_rF)) + geom_point()
ggplot(dat, aes(x = age, y = logPow_delta_rOP)) + geom_point()
ageGroups
View(dat)
View(dat)
View(dat)
dat <- filter(test, group %in% c('CON', 'AD', 'ASD'), eyes == 'open', age<999, nbChanFinal/nbChanOrig >= .5, nbChanOrig>20)
ggplot(dat, aes(x = age, color = group, fill = group)) + geom_histogram()
ggplot(dat, aes(x = age, color = dataSet, fill = dataSet)) + geom_histogram()
ggplot(dat, aes(x = sex, color = group, fill = group)) + geom_bar()
Anova(curLM, type = 3)
ggplot(results, aes(x=Diag, color = factor(ageGroup), fill = factor(ageGroup) )) + geom_histogram(binwidth = .001) +
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(results, aes(x=age, color = factor(ageGroup), fill = factor(ageGroup) ) ) + geom_histogram(binwidth = .001)+
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(results, aes(x=sex, color = factor(ageGroup), fill = factor(ageGroup) ) ) + geom_histogram(binwidth = .001)+
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(results, aes(x=IQ, color = factor(ageGroup), fill = factor(ageGroup) ) ) + geom_histogram(binwidth = .001)+
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
ggplot(dat, aes(x = age, y = sampEnt_course_O)) + geom_point()
ggplot(dat, aes(x = age, y = pow_delta_IL, color = group)) + geom_point()
ggplot(dat, aes(x = age, y = pow_delta_iL, color = group)) + geom_point()
ggplot(dat, aes(x = age, y = pow_delta_lL, color = group)) + geom_point()
ggplot(dat, aes(x = age, y = pow_delta_lL, color = group)) + geom_point()+
coord_cartesian(xlim=c(0,750), ylim = c(0,50))
coord_cartesian(xlim=c(0,750), ylim = c(0,100))
ggplot(dat, aes(x = age, y = pow_delta_lL, color = group)) + geom_point()+
coord_cartesian(xlim=c(0,750), ylim = c(0,100))
ggplot(dat, aes(x = age, y = PACmi_del_gL_lF, color = group)) + geom_point()+
coord_cartesian(xlim=c(0,750), ylim = c(0,.01))
ggplot(dat, aes(x = age, y = PACmi_del_gL_lF, color = group)) + geom_point()+
coord_cartesian(xlim=c(0,750), ylim = c(0,.005))
ggplot(dat, aes(x = age, y = PACzAsym_al_gL_rML, color = group)) + geom_point()+
coord_cartesian(xlim=c(0,750), ylim = c(-.005,.005))
ggplot(dat, aes(x = age, y = PACzAsym_al_gL_rML, color = group)) + geom_point()+
coord_cartesian(xlim=c(0,750), ylim = c(-1,1))
ggplot(dat, aes(x = age, y = PACzAsym_al_gL_rML, color = group)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(-1,1))
ggplot(dat, aes(x = age, y = logPow_gam2_rL, color = group)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(-1,1))
ggplot(dat, aes(x = age, y = logPow_gam2_rL, color = group)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(-3,1))
ggplot(dat, aes(x = age, y = logPow_gam2_rL, color = group)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(-2,1))
ggplot(dat, aes(x = age, y = logPowAsym_alpha_rML, color = group)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(-2,1))
ggplot(dat, aes(x = age, y = logPowAsym_alpha_rML, color = group)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(-.5,1))
ggplot(dat, aes(x = age, y = PACmi_del_gL_lF, color = group)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(0,.01))
ggplot(dat, aes(x = age, y = PACmi_del_gL_lF, color = group)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(0,.001))
ggplot(dat, aes(x = age, y = PACmi_del_gL_lF, color = group)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(0,.005))
ggplot(dat, aes(x = age, y = sampEnt_course_O, color = group)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(0,1))
ggplot(dat, aes(x = age, y = sampEnt_course_O, color = group)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(0,3))
ggplot(dat, aes(x = age, y = sampEnt_course_O, color = group)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(0,2))
ggplot(dat, aes(x = age, y = PACmi_del_gL_lF, color = group)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(0,.005))
ggplot(results, aes(x=Diag, color = factor(ageGroup), fill = factor(ageGroup) )) + geom_histogram(binwidth = .001) +
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
sum(results$Diag>.05)
sum(results$age>.05)
ggplot(dat, aes(x = age, y = PACmi_al_gL_rF, color = group)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(0,.005))
ggplot(dat, aes(x = age, y = PACmi_al_gL_rF, color = group)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(0,.0001))
ggplot(dat, aes(x = age, y = PACmi_al_gL_rF, color = group)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(0,.00001))
ggplot(dat, aes(x = age, y = PACmi_al_gL_rF, color = group)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(0,.0002))
ggplot(dat, aes(x = age, y = PACmi_al_gL_rF, color = group)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(0,.00005))
ggplot(dat, aes(x = age, y = PACmi_al_gL_rF, color = dataSet)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(0,.00005))
ggplot(dat, aes(x = age, y = sampEnt_course_O, color = dataSet)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(0,2))
ggplot(dat, aes(x = age, y = sampEnt_all_O, color = dataSet)) + geom_jitter()+
coord_cartesian(xlim=c(0,750), ylim = c(0,2))
library(lsr)
library(tidyverse)
# library(ggpubr)
# library(rstatix)
# library(broom)
library(car)
library(circular)
test <- read.csv("C:\\Users\\pc1aod\\Documents\\GitHub\\SheffieldAutismBiomarkers\\autismBiomarkersAllData2.csv")
test$nbChanOrig[test$nbChanOrig==999] = 124
dat <- filter(test, group %in% c('CON', 'AD', 'ASD'), eyes == 'open', nbChanFinal/nbChanOrig >= .5, nbChanOrig>20)
setwd("C:\\Users\\pc1aod\\Documents\\GitHub\\SheffieldAutismBiomarkers\\figures")
ggplot(dat, aes(x = age, color = group, fill = group)) + geom_histogram()
png("ageAll.png",         # File name
width=1024, height=768)# Color
ggplot(dat, aes(x = age, color = group, fill = group)) + geom_histogram()
rect(1, 5, 3, 7, col="white")
dev.off()
dat <- filter(test, group %in% c('CON', 'AD', 'ASD'), eyes == 'open', age<250, nbChanFinal/nbChanOrig >= .5, nbChanOrig>20)
png("ageYoung.png",         # File name
width=1024, height=768)# Color
ggplot(dat, aes(x = age, color = group, fill = group)) + geom_histogram()
rect(1, 5, 3, 7, col="white")
dev.off()
png("ageDatSet.png",         # File name
width=1024, height=768)
ggplot(dat, aes(x = age, color = dataSet, fill = dataSet)) + geom_histogram()
rect(1, 5, 3, 7, col="white")
dev.off()
png("sex.png",         # File name
width=1024, height=768)
ggplot(dat, aes(x = sex, color = group, fill = group)) + geom_bar()
rect(1, 5, 3, 7, col="white")
dev.off()
