outPlot<-ggplot(filter(resultsTRAIN, resultsTRAIN[varNames[vari]]>thresh & resultsTRAIN$ageGroup == agei),
aes_string(x=varNames[vari], color = 'type', fill = 'type')) +
colScale +
fillScale +
xlab('effect size (\U1D702\U00B2\U209A)') +
geom_histogram(breaks = seq(0,1,.05)) +
coord_cartesian(xlim=c(0,.6500001),ylim = c(0,100)) +
theme_classic(base_size = 30)+
theme(axis.ticks.length=unit(-0.5, "cm"),
axis.line = element_line(colour = 'black', size = 3),
axis.ticks = element_line(colour = 'black', size = 3)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, .65), breaks = seq(0,.6,.1)) +
scale_y_continuous(expand = c(0, 0), breaks = seq(0,100,20)) +
geom_vline(xintercept = .05, linetype = 'dashed', size = 5)
png(paste('effect_', varNames[vari], '_', as.character(agei), '.png',sep=''),         # File name
width=1024, height=768)
print(outPlot)
dev.off()
}
}
outPlot<-ggplot(filter(results, ageGroup>0), aes(x=Diag, color = factor(ageGroup), fill = factor(ageGroup) )) + geom_histogram(binwidth = .001) +
coord_cartesian(xlim=c(0,.6), ylim = c(0,50))
print(outPlot)
varNames = names(dat)[20:1179]
which(resultDif[predNames[vari]] > .2)
predNames = c('age', 'sex', 'IQ', 'Diag')
comboDat = rbind(resultsTRAIN, resultsTEST)
resultsTEST$type = resultsTRAIN$type
comboDat = rbind(resultsTRAIN, resultsTEST)
comboDat = cbind(resultsTRAIN, resultsTEST)
dat2 = read.csv("C:\\Users\\pc1aod\\Documents\\GitHub\\SheffieldAutismBiomarkers\\trainSet.csv")
dat2 <- dat2 %>% select(-X)
comboDat = cbind(dat2, dat)
comboDat = rbind(dat2, dat)
predNames[vari]
resultDif[predNames[vari]] > .2
resultDif[predNames[vari]]
resultsDif[predNames[vari]]
which(resultsDif[predNames[vari]] > .2)
resultsDif[predNames[vari]]
which(resultsDif[predNames[vari]] < .2)
temp = resultsDif$ageGroup == agei
candidates = which(temp[predNames[vari]] < .2)
temp = resultsDif[resultsDif$ageGroup == agei,]
candidates = which(temp[predNames[vari]] < .2)
predNames[vari]
temp[predNames[vari]]
ggplot(temp, aes(x = Diag)) + geom_histogram()
thresh = .05
candidates = which(temp[predNames[vari]] < .2 & resultsTRAIN[predNames[vari]] > thresh)
tempRes = resultsTRAIN[resultsDif$ageGroup == agei,]
candidates = which(temp[predNames[vari]] < .2 & tempRes[predNames[vari]] > thresh)
tempRes[candidates,predNames[vari]]
max(tempRes[candidates,predNames[vari]])
which(tempRes[candidates,predNames[vari]]==max(tempRes[candidates,predNames[vari]]))
target = candidates[which(tempRes[candidates,predNames[vari]]==max(tempRes[candidates,predNames[vari]]))]
target
View(comboDat)
ggplot(comboDat, aes_string(x = 'age', y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter()+
scale_color_manual(values=c("#4E554E", "#3BACDD", "#E1C271"),
labels=c('CON', 'ASD', 'AD')) +
theme_classic()
outPlot <- ggplot(comboDat, aes_string(x = 'age', y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter()+
scale_color_manual(values=c("#4E554E", "#3BACDD", "#E1C271"),
labels=c('CON', 'ASD', 'AD')) +
theme_classic() +
theme(axis.line = element_line(color = 'black', size = 3),
axis.ticks = element_line(colour = "black", size = 2),
axis.ticks.length=unit(-.25, "cm"),
text = element_text(size = 20)) +
ylab(varNames[target]) +
ggtitle(paste(varNames[target], '; age group: ', as.character(ii-1), sep = ''))+
guides(color = guide_legend(override.aes = list(size=10)),
shape = guide_legend(override.aes = list(size=10)))
print(outPlot)
ggplot(comboDat, aes_string(x = 'age', y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .5)+
scale_color_manual(values=c("#4E554E", "#3BACDD", "#E1C271"),
labels=c('CON', 'ASD', 'AD')) +
theme_classic() +
theme(axis.line = element_line(color = 'black', size = 3),
axis.ticks = element_line(colour = "black", size = 2),
axis.ticks.length=unit(-.25, "cm"),
text = element_text(size = 20)) +
ylab(varNames[target]) +
ggtitle(paste(varNames[target], '; age group: ', as.character(ii-1), sep = ''))+
guides(color = guide_legend(override.aes = list(size=10)),
shape = guide_legend(override.aes = list(size=10)))
ggplot(comboDat, aes_string(x = 'age', y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)+
scale_color_manual(values=c("#4E554E", "#3BACDD", "#E1C271"),
labels=c('CON', 'ASD', 'AD')) +
theme_classic() +
theme(axis.line = element_line(color = 'black', size = 3),
axis.ticks = element_line(colour = "black", size = 2),
axis.ticks.length=unit(-.25, "cm"),
text = element_text(size = 20)) +
ylab(varNames[target]) +
ggtitle(paste(varNames[target], '; age group: ', as.character(ii-1), sep = ''))+
guides(color = guide_legend(override.aes = list(size=10)),
shape = guide_legend(override.aes = list(size=10)))
ggplot(comboDat, aes_string(x = 'age', y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)+
scale_color_manual(values=c("#4E554E", "#3BACDD", "#E1C271"),
labels=c('CON', 'ASD', 'AD')) +
theme_classic() +
theme(axis.line = element_line(color = 'black', size = 3),
axis.ticks = element_line(colour = "black", size = 2),
axis.ticks.length=unit(-.25, "cm"),
text = element_text(size = 20)) +
ylab(varNames[target]) +
ggtitle(paste(varNames[target], '; age group: ', as.character(agei), sep = ''))+
guides(color = guide_legend(override.aes = list(size=10)),
shape = guide_legend(override.aes = list(size=10)))
agei
paste( 'bestPredicted_',predNames[vari],'_', agei, '.png', sep = '')
vari
vari = 1
for(vari in 1:4){
for(agei in 1:3){
temp = resultsDif[resultsDif$ageGroup == agei,]
tempRes = resultsTRAIN[resultsDif$ageGroup == agei,]
candidates = which(temp[predNames[vari]] < .2 & tempRes[predNames[vari]] > thresh)
target = candidates[which(tempRes[candidates,predNames[vari]]==max(tempRes[candidates,predNames[vari]]))]
outPlot <- ggplot(comboDat, aes_string(x = 'age', y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)+
scale_color_manual(values=c("#4E554E", "#3BACDD", "#E1C271"),
labels=c('CON', 'ASD', 'AD')) +
theme_classic() +
theme(axis.line = element_line(color = 'black', size = 3),
axis.ticks = element_line(colour = "black", size = 2),
axis.ticks.length=unit(-.25, "cm"),
text = element_text(size = 20)) +
ylab(varNames[target]) +
ggtitle(paste(varNames[target], '; age group: ', as.character(agei), sep = ''))+
guides(color = guide_legend(override.aes = list(size=10)),
shape = guide_legend(override.aes = list(size=10)))
# rect(1, 5, 3, 7, col="white")
png(paste( 'bestPredicted_',predNames[vari],'_', agei, '.png', sep = ''),         # File name
width=1024, height=768)
print(outPlot)
dev.off()
}
}
target
length(target)
for(vari in 1:4){
for(agei in 1:3){
temp = resultsDif[resultsDif$ageGroup == agei,]
tempRes = resultsTRAIN[resultsDif$ageGroup == agei,]
candidates = which(temp[predNames[vari]] < .2 & tempRes[predNames[vari]] > thresh)
target = candidates[which(tempRes[candidates,predNames[vari]]==max(tempRes[candidates,predNames[vari]]))]
if(length(target)>0){
outPlot <- ggplot(comboDat, aes_string(x = 'age', y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)+
scale_color_manual(values=c("#4E554E", "#3BACDD", "#E1C271"),
labels=c('CON', 'ASD', 'AD')) +
theme_classic() +
theme(axis.line = element_line(color = 'black', size = 3),
axis.ticks = element_line(colour = "black", size = 2),
axis.ticks.length=unit(-.25, "cm"),
text = element_text(size = 20)) +
ylab(varNames[target]) +
ggtitle(paste(varNames[target], '; age group: ', as.character(agei), sep = ''))+
guides(color = guide_legend(override.aes = list(size=10)),
shape = guide_legend(override.aes = list(size=10)))
# rect(1, 5, 3, 7, col="white")
png(paste( 'bestPredicted_',predNames[vari],'_', agei, '.png', sep = ''),         # File name
width=1024, height=768)
print(outPlot)
dev.off()
}
}
}
for(vari in 1:4){
for(agei in 1:3){
temp = resultsDif[resultsDif$ageGroup == agei,]
tempRes = resultsTRAIN[resultsDif$ageGroup == agei,]
candidates = which(temp[predNames[vari]] < .2 & tempRes[predNames[vari]] > thresh)
target = candidates[which(tempRes[candidates,predNames[vari]]==max(tempRes[candidates,predNames[vari]]))]
if(length(target)>0){
limVals = quantile(comboDat[varNames[target]], c(.1,.9))
limVals = c(limVals[1] - (limVals[2]-limVals[1])*.1,
limVals[2] + (limVals[2]-limVals[1])*.1)
outPlot <- ggplot(comboDat, aes_string(x = 'age', y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)+
scale_color_manual(values=c("#4E554E", "#3BACDD", "#E1C271"),
labels=c('CON', 'ASD', 'AD')) +
theme_classic() +
theme(axis.line = element_line(color = 'black', size = 3),
axis.ticks = element_line(colour = "black", size = 2),
axis.ticks.length=unit(-.25, "cm"),
text = element_text(size = 20)) +
ylim(limVals) +
ylab(varNames[target]) +
ggtitle(paste(varNames[target], '; age group: ', as.character(agei), sep = ''))+
guides(color = guide_legend(override.aes = list(size=10)),
shape = guide_legend(override.aes = list(size=10)))
# rect(1, 5, 3, 7, col="white")
png(paste( 'bestPredicted_',predNames[vari],'_', agei, '.png', sep = ''),         # File name
width=1024, height=768)
print(outPlot)
dev.off()
}
}
}
for(vari in 1:4){
for(agei in 1:3){
temp = resultsDif[resultsDif$ageGroup == agei,]
tempRes = resultsTRAIN[resultsDif$ageGroup == agei,]
candidates = which(temp[predNames[vari]] < .2 & tempRes[predNames[vari]] > thresh)
target = candidates[which(tempRes[candidates,predNames[vari]]==max(tempRes[candidates,predNames[vari]]))]
if(length(target)>0){
limVals = quantile(comboDat[,varNames[target]], c(.1,.9))
limVals = c(limVals[1] - (limVals[2]-limVals[1])*.1,
limVals[2] + (limVals[2]-limVals[1])*.1)
outPlot <- ggplot(comboDat, aes_string(x = 'age', y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)+
scale_color_manual(values=c("#4E554E", "#3BACDD", "#E1C271"),
labels=c('CON', 'ASD', 'AD')) +
theme_classic() +
theme(axis.line = element_line(color = 'black', size = 3),
axis.ticks = element_line(colour = "black", size = 2),
axis.ticks.length=unit(-.25, "cm"),
text = element_text(size = 20)) +
ylim(limVals) +
ylab(varNames[target]) +
ggtitle(paste(varNames[target], '; age group: ', as.character(agei), sep = ''))+
guides(color = guide_legend(override.aes = list(size=10)),
shape = guide_legend(override.aes = list(size=10)))
# rect(1, 5, 3, 7, col="white")
png(paste( 'bestPredicted_',predNames[vari],'_', agei, '.png', sep = ''),         # File name
width=1024, height=768)
print(outPlot)
dev.off()
}
}
}
for(vari in 1:4){
for(agei in 1:3){
temp = resultsDif[resultsDif$ageGroup == agei,]
tempRes = resultsTRAIN[resultsDif$ageGroup == agei,]
candidates = which(temp[predNames[vari]] < .2 & tempRes[predNames[vari]] > thresh)
target = candidates[which(tempRes[candidates,predNames[vari]]==max(tempRes[candidates,predNames[vari]]))]
if(length(target)>0){
limVals = quantile(comboDat[,varNames[target]], c(.1,.9))
limVals = c(limVals[1] - (limVals[2]-limVals[1])*.1,
limVals[2] + (limVals[2]-limVals[1])*.1)
outPlot <- ggplot(comboDat, aes_string(x = predNames[vari], y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)+
scale_color_manual(values=c("#4E554E", "#3BACDD", "#E1C271"),
labels=c('CON', 'ASD', 'AD')) +
theme_classic() +
theme(axis.line = element_line(color = 'black', size = 3),
axis.ticks = element_line(colour = "black", size = 2),
axis.ticks.length=unit(-.25, "cm"),
text = element_text(size = 20)) +
ylim(limVals) +
ylab(varNames[target]) +
ggtitle(paste(varNames[target], '; age group: ', as.character(agei), sep = ''))+
guides(color = guide_legend(override.aes = list(size=10)),
shape = guide_legend(override.aes = list(size=10)))
# rect(1, 5, 3, 7, col="white")
png(paste( 'bestPredicted_',predNames[vari],'_', agei, '.png', sep = ''),         # File name
width=1024, height=768)
print(outPlot)
dev.off()
}
}
}
vari
predNames[vari]
ggplot(comboDat, aes_string(x = predNames[vari], y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)
ggplot(comboDat, aes_string(x = predNames[vari], y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_point()
ggplot(comboDat, aes_string(x = predNames2[vari], y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)
predNames2[4] = 'group'
ggplot(comboDat, aes_string(x = predNames2[vari], y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)
predNames2 = predNames
predNames2[4] = 'group'
ggplot(comboDat, aes_string(x = predNames2[vari], y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)
ggplot(comboDat, aes_string(x = predNames2[vari], y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)
varNames[target]
predNames2[vari]
ggplot(comboDat, aes_string(x = predNames2[vari], y = varNames[target], color = 'group', shape = 'sex', size = 'IQ'))
outPlot <- ggplot(comboDat, aes_string(x = predNames2[vari], y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)
print(outPlot)
ggplot(comboDat, aes_string(x = 'age', y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)
varNames[target]
candidates
which(tempRes[candidates,predNames[vari]]==max(tempRes[candidates,predNames[vari]]))
target = candidates[1]
ggplot(comboDat, aes_string(x = 'age', y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)
outPlot <- ggplot(comboDat, aes_string(x = 'age', y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)+
scale_color_manual(values=c("#4E554E", "#3BACDD", "#E1C271"),
labels=c('CON', 'ASD', 'AD')) +
theme_classic() +
theme(axis.line = element_line(color = 'black', size = 3),
axis.ticks = element_line(colour = "black", size = 2),
axis.ticks.length=unit(-.25, "cm"),
text = element_text(size = 20)) +
ylim(limVals) +
ylab(varNames[target]) +
ggtitle(paste(varNames[target], '; age group: ', as.character(agei), sep = ''))+
guides(color = guide_legend(override.aes = list(size=10)),
shape = guide_legend(override.aes = list(size=10)))
# rect(1, 5, 3, 7, col="white")
png(paste( 'bestPredicted_',predNames[vari],'_', agei, '.png', sep = ''),         # File name
width=1024, height=768)
print(outPlot)
dev.off()
outPlot <- ggplot(comboDat, aes_string(x = group, y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)+
scale_color_manual(values=c("#4E554E", "#3BACDD", "#E1C271"),
labels=c('CON', 'ASD', 'AD')) +
theme_classic() +
theme(axis.line = element_line(color = 'black', size = 3),
axis.ticks = element_line(colour = "black", size = 2),
axis.ticks.length=unit(-.25, "cm"),
text = element_text(size = 20)) +
ylim(limVals) +
ylab(varNames[target]) +
ggtitle(paste(varNames[target], '; age group: ', as.character(agei), sep = ''))+
guides(color = guide_legend(override.aes = list(size=10)),
shape = guide_legend(override.aes = list(size=10)))
# rect(1, 5, 3, 7, col="white")
png(paste( 'bestPredicted_',predNames[vari],'_', agei, '.png', sep = ''),         # File name
width=1024, height=768)
print(outPlot)
dev.off()
x = 1
for(vari in 1:4){
for(agei in 1:3){
temp = resultsDif[resultsDif$ageGroup == agei,]
tempRes = resultsTRAIN[resultsDif$ageGroup == agei,]
candidates = which(temp[predNames[vari]] < .2 & tempRes[predNames[vari]] > thresh)
target = candidates[which(tempRes[candidates,predNames[vari]]==max(tempRes[candidates,predNames[vari]]))]
if(length(target)>0){
limVals = quantile(comboDat[,varNames[target]], c(.1,.9))
limVals = c(limVals[1] - (limVals[2]-limVals[1])*.1,
limVals[2] + (limVals[2]-limVals[1])*.1)
outPlot <- ggplot(comboDat, aes_string(x = 'age', y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)+
scale_color_manual(values=c("#4E554E", "#3BACDD", "#E1C271"),
labels=c('CON', 'ASD', 'AD')) +
theme_classic() +
theme(axis.line = element_line(color = 'black', size = 3),
axis.ticks = element_line(colour = "black", size = 2),
axis.ticks.length=unit(-.25, "cm"),
text = element_text(size = 20)) +
ylim(limVals) +
ylab(varNames[target]) +
ggtitle(paste(varNames[target], '; age group: ', as.character(agei), sep = ''))+
guides(color = guide_legend(override.aes = list(size=10)),
shape = guide_legend(override.aes = list(size=10)))
# rect(1, 5, 3, 7, col="white")
png(paste( 'bestPredicted_',predNames[vari],'_', agei, '.png', sep = ''),         # File name
width=1024, height=768)
print(outPlot)
dev.off()
}
}
}
warnings()
predNames2 = predNames
predNames2[4] = 'group'
for(vari in 1:4){
for(agei in 1:3){
temp = resultsDif[resultsDif$ageGroup == agei,]
tempRes = resultsTRAIN[resultsDif$ageGroup == agei,]
candidates = which(temp[predNames[vari]] < .2 & tempRes[predNames[vari]] > thresh)
target = candidates[which(tempRes[candidates,predNames[vari]]==max(tempRes[candidates,predNames[vari]]))]
if(length(target)>0){
limVals = quantile(comboDat[,varNames[target]], c(.1,.9))
limVals = c(limVals[1] - (limVals[2]-limVals[1])*.1,
limVals[2] + (limVals[2]-limVals[1])*.1)
outPlot <- ggplot(comboDat, aes_string(x = 'age', y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)+
scale_color_manual(values=c("#4E554E", "#3BACDD", "#E1C271"),
labels=c('CON', 'ASD', 'AD')) +
theme_classic() +
theme(axis.line = element_line(color = 'black', size = 3),
axis.ticks = element_line(colour = "black", size = 2),
axis.ticks.length=unit(-.25, "cm"),
text = element_text(size = 20)) +
# ylim(limVals) +
ylab(varNames[target]) +
ggtitle(paste(varNames[target], '; age group: ', as.character(agei), sep = ''))+
guides(color = guide_legend(override.aes = list(size=10)),
shape = guide_legend(override.aes = list(size=10)))
# rect(1, 5, 3, 7, col="white")
png(paste( 'bestPredicted_',predNames[vari],'_', agei, '.png', sep = ''),         # File name
width=1024, height=768)
print(outPlot)
dev.off()
}
}
}
warnings()
predNames2 = predNames
predNames2[4] = 'group'
for(vari in 1:4){
for(agei in 1:3){
temp = resultsDif[resultsDif$ageGroup == agei,]
tempRes = resultsTRAIN[resultsDif$ageGroup == agei,]
candidates = which(temp[predNames[vari]] < .2 & tempRes[predNames[vari]] > thresh)
target = candidates[which(tempRes[candidates,predNames[vari]]==max(tempRes[candidates,predNames[vari]]))]
if(length(target)>0){
limVals = quantile(comboDat[,varNames[target]], c(.1,.9))
limVals = c(limVals[1] - (limVals[2]-limVals[1])*.2,
limVals[2] + (limVals[2]-limVals[1])*.2)
outPlot <- ggplot(comboDat, aes_string(x = predNames2[vari], y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)+
scale_color_manual(values=c("#4E554E", "#3BACDD", "#E1C271"),
labels=c('CON', 'ASD', 'AD')) +
theme_classic() +
theme(axis.line = element_line(color = 'black', size = 3),
axis.ticks = element_line(colour = "black", size = 2),
axis.ticks.length=unit(-.25, "cm"),
text = element_text(size = 20)) +
ylim(limVals) +
ylab(varNames[target]) +
ggtitle(paste(varNames[target], '; age group: ', as.character(agei), sep = ''))+
guides(color = guide_legend(override.aes = list(size=10)),
shape = guide_legend(override.aes = list(size=10)))
# rect(1, 5, 3, 7, col="white")
png(paste( 'bestPredicted_',predNames[vari],'_', agei, '.png', sep = ''),         # File name
width=1024, height=768)
print(outPlot)
dev.off()
}
}
}
warnings()
levels(comboData$group)
levels(comboDat$group)
levels(factor(comboDat$group))
for(vari in 1:4){
for(agei in 1:3){
temp = resultsDif[resultsDif$ageGroup == agei,]
tempRes = resultsTRAIN[resultsDif$ageGroup == agei,]
candidates = which(temp[predNames[vari]] < .2 & tempRes[predNames[vari]] > thresh)
target = candidates[which(tempRes[candidates,predNames[vari]]==max(tempRes[candidates,predNames[vari]]))]
if(length(target)>0){
limVals = quantile(comboDat[,varNames[target]], c(.1,.9))
limVals = c(limVals[1] - (limVals[2]-limVals[1])*.2,
limVals[2] + (limVals[2]-limVals[1])*.2)
outPlot <- ggplot(comboDat, aes_string(x = predNames2[vari], y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)+
scale_color_manual(values=c( "#E1C271", "#3BACDD","#4E554E"),
labels=c(  'AD', 'ASD', 'CON')) +
theme_classic() +
theme(axis.line = element_line(color = 'black', size = 3),
axis.ticks = element_line(colour = "black", size = 2),
axis.ticks.length=unit(-.25, "cm"),
text = element_text(size = 20)) +
ylim(limVals) +
ylab(varNames[target]) +
ggtitle(paste(varNames[target], '; age group: ', as.character(agei), sep = ''))+
guides(color = guide_legend(override.aes = list(size=10)),
shape = guide_legend(override.aes = list(size=10)))
# rect(1, 5, 3, 7, col="white")
png(paste( 'bestPredicted_',predNames[vari],'_', agei, '.png', sep = ''),         # File name
width=1024, height=768)
print(outPlot)
dev.off()
}
}
}
for(vari in 1:4){
for(agei in 1:3){
temp = resultsDif[resultsDif$ageGroup == agei,]
tempRes = resultsTRAIN[resultsDif$ageGroup == agei,]
candidates = which(temp[predNames[vari]] < .2 & tempRes[predNames[vari]] > thresh)
target = candidates[which(tempRes[candidates,predNames[vari]]==max(tempRes[candidates,predNames[vari]]))]
if(length(target)>0){
limVals = quantile(comboDat[,varNames[target]], c(.1,.9))
limVals = c(limVals[1] - (limVals[2]-limVals[1])*.2,
limVals[2] + (limVals[2]-limVals[1])*.2)
outPlot <- ggplot(comboDat, aes_string(x = 'age', y = varNames[target], color = 'group', shape = 'sex', size = 'IQ')) +
geom_jitter(alpha = .75)+
scale_color_manual(values=c( "#E1C271", "#3BACDD","#4E554E"),
labels=c(  'AD', 'ASD', 'CON')) +
theme_classic() +
theme(axis.line = element_line(color = 'black', size = 3),
axis.ticks = element_line(colour = "black", size = 2),
axis.ticks.length=unit(-.25, "cm"),
text = element_text(size = 20)) +
ylim(limVals) +
ylab(varNames[target]) +
ggtitle(paste(varNames[target], '; age group: ', as.character(agei), sep = ''))+
guides(color = guide_legend(override.aes = list(size=10)),
shape = guide_legend(override.aes = list(size=10)))
# rect(1, 5, 3, 7, col="white")
png(paste( 'bestPredicted_',predNames[vari],'_', agei, '.png', sep = ''),         # File name
width=1024, height=768)
print(outPlot)
dev.off()
}
}
}
